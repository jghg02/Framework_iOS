{"name":"Framework ios","tagline":"How to create a Framework in iOS.","body":"#Documentación.\r\n\r\n##Creando un Framework en _iOS_.\r\n\r\nLo primero que debemos crear es una _Libreria Estatica_, para esto vamos a __File__ > __New Project__ en esta parte seleccionamos __iOS__ y dentro de esta sección seleccionamos __Cocoa Touch Static Library__\r\n\r\n![](https://raw.githubusercontent.com/jghg02/Framework_iOS/master/img/Framework1.png)\r\n\r\nLuego le damos _next_ y colocamos el __nombre__ que va a tener nuestra libreria.\r\n\r\n\r\nSalvamos nuestro proyecto y seleccionamos el direcctorio donde lo guardaremos. \r\n\r\nUna vez creado, debemos ver algo como esto.\r\n![](https://raw.githubusercontent.com/jghg02/Framework_iOS/master/img/Framework3.png)\r\n\r\nDentro de __Xcode__ seleccionamos el _Target_ de la libreria que hemos creado y nos vamos a _Build Phase_ y agregamos los __Headers__ (Los cuales seran usados por la app donde importaremos nuestra libreria)\r\n\r\n![](https://raw.githubusercontent.com/jghg02/Framework_iOS/master/img/Framework4.png)\r\n\r\nPara agregar los __Headers__ vamos al _Menu Editor_ > _Add Build Phase_ > _Add Headers Build Phase_\r\n\r\n![](https://raw.githubusercontent.com/jghg02/Framework_iOS/master/img/Framework5.png)\r\n\r\n![](https://raw.githubusercontent.com/jghg02/Framework_iOS/master/img/Framework6.png)\r\n\r\nEn los __Headers__ solo importaremos los archivos con extension _.h_ (estos deben ser colocados en __Public__)\r\n\r\n![](https://raw.githubusercontent.com/jghg02/Framework_iOS/master/img/Framework21.png)\r\n\r\nLuego de agregar los _Headers_ es necesario agregar el __script__ para de esta forma cada vez que hagamos el __build__ de la libreria genere queleto de nuestro framework. \r\n\r\nPara esto vamos al _Menu Editor_ > _Add Build Phase_ > _Add Run Script Build Phase_ \r\n\r\n![](https://raw.githubusercontent.com/jghg02/Framework_iOS/master/img/Framework7.png)\r\n\r\n![](https://raw.githubusercontent.com/jghg02/Framework_iOS/master/img/Framework8.png)\r\n\r\n###Script\r\n\r\n\tset -e\r\n\r\n    mkdir -p \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.framework/Versions/A/Headers\"\r\n\r\n     # Link the \"Current\" version to \"A\"\r\n     /bin/ln -sfh A \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.framework/Versions/Current\"\r\n    /bin/ln -sfh Versions/Current/Headers \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.framework/Headers\"\r\n    /bin/ln -sfh \"Versions/Current/${PRODUCT_NAME}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.framework/${PRODUCT_NAME}\"\r\n\r\n    # The -a ensures that the headers maintain the source modification date so that we don't constantly\r\n    # cause propagating rebuilds of files that import these headers.\r\n    /bin/cp -a \"${TARGET_BUILD_DIR}/${PUBLIC_HEADERS_FOLDER_PATH}/\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.framework/Versions/A/Headers\"\r\n\r\n\r\n\r\n###Creando el Framework Distribution Target.\r\n\r\nPara esto vamos al Menu __File__ > __Target__ > __iOS__ > __Other__  and __create a new agregate__\r\n\r\n![](https://raw.githubusercontent.com/jghg02/Framework_iOS/master/img/Framework9.png)\r\n\r\nSeleccionamos __Target__\r\n\r\n![](https://raw.githubusercontent.com/jghg02/Framework_iOS/master/img/Framework10.png)\r\n\r\nY colocamos el nombre del _Target_ y seleccionamos el proyecto con el cual lo vamos a asociar.\r\n\r\n![](https://raw.githubusercontent.com/jghg02/Framework_iOS/master/img/Framework11.png)\r\n\r\n![](https://raw.githubusercontent.com/jghg02/Framework_iOS/master/img/Framework12.png)\r\n\r\nLuego agregamos en el __Build Phase__ el _script_. Para esto vamos al menu __Editor__ > __Add Build Phase__ > __Add Run Script Build Phase__ \r\n\r\n![](https://raw.githubusercontent.com/jghg02/Framework_iOS/master/img/Framework13.png)\r\n\r\n![](https://raw.githubusercontent.com/jghg02/Framework_iOS/master/img/Framework14.png)\r\n\r\n###Script \r\n\r\n    set -e\r\n    set +u\r\n    # Avoid recursively calling this script.\r\n    if [[ $SF_MASTER_SCRIPT_RUNNING ]]\r\n    then\r\n     exit 0\r\n    fi\r\n    set -u\r\n    export SF_MASTER_SCRIPT_RUNNING=1\r\n\r\n    SF_TARGET_NAME=${PROJECT_NAME}\r\n    SF_EXECUTABLE_PATH=\"lib${SF_TARGET_NAME}.a\"\r\n    SF_WRAPPER_NAME=\"${SF_TARGET_NAME}.framework\"\r\n\r\n    # The following conditionals come from\r\n    # https://github.com/kstenerud/iOS-Universal-Framework\r\n\r\n     if [[ \"$SDK_NAME\" =~ ([A-Za-z]+) ]]\r\n     then\r\n        SF_SDK_PLATFORM=${BASH_REMATCH[1]}\r\n     else\r\n        echo \"Could not find platform name from SDK_NAME: $SDK_NAME\"\r\n        exit 1\r\n    fi\r\n\r\n    if [[ \"$SDK_NAME\" =~ ([0-9]+.*$) ]]\r\n    then\r\n       SF_SDK_VERSION=${BASH_REMATCH[1]}\r\n    else\r\n      echo \"Could not find sdk version from SDK_NAME: $SDK_NAME\"\r\n      exit 1\r\n    fi\r\n\r\n    if [[ \"$SF_SDK_PLATFORM\" = \"iphoneos\" ]]\r\n    then\r\n       SF_OTHER_PLATFORM=iphonesimulator\r\n    else\r\n       SF_OTHER_PLATFORM=iphoneos\r\n    fi\r\n\r\n    if [[ \"$BUILT_PRODUCTS_DIR\" =~ (.*)$SF_SDK_PLATFORM$ ]]\r\n    then\r\n       SF_OTHER_BUILT_PRODUCTS_DIR=\"${BASH_REMATCH[1]}${SF_OTHER_PLATFORM}\"\r\n    else\r\n       echo \"Could not find platform name from build products directory:        $BUILT_PRODUCTS_DIR\"\r\n       exit 1\r\n    fi\r\n\r\n    # Build the other platform.\r\n    xcrun xcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${SF_OTHER_PLATFORM}${SF_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" OBJROOT=\"${OBJROOT}\" BUILD_ROOT=\"${BUILD_ROOT}\" SYMROOT=\"${SYMROOT}\" $ACTION\r\n\r\n     # Smash the two static libraries into one fat binary and store it in the .framework\r\n     xcrun lipo -create \"${BUILT_PRODUCTS_DIR}/${SF_EXECUTABLE_PATH}\" \"${SF_OTHER_BUILT_PRODUCTS_DIR}/${SF_EXECUTABLE_PATH}\" -output \"${BUILT_PRODUCTS_DIR}/${SF_WRAPPER_NAME}/Versions/A/${SF_TARGET_NAME}\"\r\n\r\n     # Copy the binary to the other architecture folder to have a complete framework in both.\r\n     cp -a \"${BUILT_PRODUCTS_DIR}/${SF_WRAPPER_NAME}/Versions/A/${SF_TARGET_NAME}\" \"${SF_OTHER_BUILT_PRODUCTS_DIR}/${SF_WRAPPER_NAME}/Versions/A/${SF_TARGET_NAME}\"\r\n\r\n\r\nSeleccionado el _Target_ que hemos creado en la sección de __Build Phase__ -> __Target Dependencies__ y agregamos la libreria que creamos.\r\n\r\n![](https://raw.githubusercontent.com/jghg02/Framework_iOS/master/img/Framework15.png)\r\n\r\n![](https://raw.githubusercontent.com/jghg02/Framework_iOS/master/img/Framework16.png)\r\n\r\nLuego creamos el __Target__ para esto vamos al menu __File__ > __New__ > __Target__ > __OS X__ > __Bundle__ \r\n\r\n![](https://raw.githubusercontent.com/jghg02/Framework_iOS/master/img/Framework17.png)\r\n\r\n![](https://raw.githubusercontent.com/jghg02/Framework_iOS/master/img/Framework18.png)\r\n\r\n![](https://raw.githubusercontent.com/jghg02/Framework_iOS/master/img/Framework19.png)\r\n\r\nProcedemos a cambiar el __Base SDK__ \r\n\r\n![](https://raw.githubusercontent.com/jghg02/Framework_iOS/master/img/Framework20.png)\r\n\r\nPor ultimo creamos el _Build_ de la __Libreria__ y el __Target__ \r\n\r\n\r\n###Project App.\r\n\r\nProcedemos a crear un nuevo proyecto __iOS__ > __Application__ > __Single View App__ Colocamos el nombre y un directorio donde se almacenara el nuevo proyecto.\r\n\r\nPara poder integrar nuestra nueva app y el _framewrok_ que hemos creado, es necesario crear un __WorkSpace__ \r\n\r\n\r\n![](https://raw.githubusercontent.com/jghg02/Framework_iOS/master/img/Work1.png)\r\n \r\n \r\n![](https://raw.githubusercontent.com/jghg02/Framework_iOS/master/img/Work2.png)\r\n\r\nVamos al directorio donde creamos los proyectos y los arrastramos al __WorkSpace__ tanto la libreria como nuestra app que hemos creado.\r\n\r\n![](https://raw.githubusercontent.com/jghg02/Framework_iOS/master/img/Work3.png)\r\n\r\n![](https://raw.githubusercontent.com/jghg02/Framework_iOS/master/img/Work4.png)\r\n\r\nEn nuestro proyecto (__TestApp__) creamos una carpeta llamada _Libraries_ y arrastramos la libreria __Testing__ (que creamos).\r\n\r\n![](https://raw.githubusercontent.com/jghg02/Framework_iOS/master/img/Work5.png)\r\n\r\n![](https://raw.githubusercontent.com/jghg02/Framework_iOS/master/img/Work6.png)\r\n\r\n![](https://raw.githubusercontent.com/jghg02/Framework_iOS/master/img/Work7.png)\r\n\r\nCompilamos el __Target__ \r\n\r\nProcedemos a agregar la libreria a nuestro proyecto. Para esto vamos al __Target__ de nuestra app y en la seccion de __Build Phase__ > __Target Dependencies__ y agregamos el _Bundle_ y el _Target_ que hemos creado anteriormente. \r\n\r\n![](https://raw.githubusercontent.com/jghg02/Framework_iOS/master/img/Work8.png)\r\n\r\nPor ultimo creamos una carpeta llamada __framework__ y copiamos los archivos __.framework__ y __.bundle__ los cuales son generadmos al momento de compilar nuestra libreria. \r\n\r\nPara esto vamos a la carpeta __Products__ de la libreria que hemos creado y damos click derecho cobre y ella y seleccionamos __Show in Finder__ \r\n\r\n![](https://raw.githubusercontent.com/jghg02/Framework_iOS/master/img/Work9.png)\r\n\r\nY se vera algo como esto.\r\n\r\n![](https://raw.githubusercontent.com/jghg02/Framework_iOS/master/img/Work10.png)\r\n\r\nLuego a la carpeta _framework_ que creamos arrastramos el archivo con extension __.bundle__ y __.framework__ \r\n\r\n![](https://raw.githubusercontent.com/jghg02/Framework_iOS/master/img/Work11.png)\r\n\r\n![](https://raw.githubusercontent.com/jghg02/Framework_iOS/master/img/Work12.png)\r\n\r\nYa con esto podemos realizar el _import_ en nuestro proyecto.\r\n\r\n![](https://raw.githubusercontent.com/jghg02/Framework_iOS/master/img/Work13.png)\r\n\r\n\r\n\r\n\r\n\r\n\r\n","google":"UA-55770028-1","note":"Don't delete this file! It's used internally to help with page regeneration."}